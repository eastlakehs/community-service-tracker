rules_version = '2';

//  ---------------------------------------------------------------    GLOBAL SCOPE ---------------------------------------------------------------   //

// only accept requests from school emails to prevent spam
function emailIsValid (_email) {
  return (request.auth.token.email.matches('.*@lwsd.org') || request.auth.token.email.matches('.*@bellevuecollege.edu'));
}

function emailMatchesDocument (_document) {
  return (request.auth.token.email.lower() == _document);
}

// allow only email/password based auth 
// require email verification
// if a user uses email-link-auth first, firebase prevents setting a password for the account (tested this myself), requiring an email-based password reset
function isAuthenticatedProperly () {
  let isAuthed = request.auth != null && request.auth.token != null && request.auth.token.email != null; 
  let isVerified = request.auth.token.email_verified; 
  let isPasswordAuth = request.auth.token.firebase.sign_in_provider == "password";
  return (isAuthed && isVerified && isPasswordAuth);
}

function isAdmin () {
  return (request.auth.token.email.matches('eastlakekey@gmail.com') || request.auth.token.email.matches('daniel@sudzilouski.com') || request.auth.token.email.matches('me@jasonzhang.dev') || request.auth.token.email.matches('communityservice@ehsptsa.org') || request.auth.token.email.matches('kriely@lwsd.org'));
}

//  ---------------------------------------------------------------    GLOBAL SCOPE ---------------------------------------------------------------   //

service cloud.firestore {
  match /databases/{database}/documents {
    // users are free to read and edit their own documents 
    // as long as the document matches their authenticated email
    match /users/{email}/{document=**} { 
      allow read, write: if isAuthenticatedProperly() &&  emailIsValid(email) && emailMatchesDocument(email);
    }
    
    // admin users have full access to database
    match /{path=**} {
    	allow read, write: if isAuthenticatedProperly() && isAdmin();
    }
    
  } 
}
